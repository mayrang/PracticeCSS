/* font=size 
px(모니터상의 화소 하나 크기에 대응하는 절대적크기)
rem(<html>태그의 font-size에 대응하는 상대적인 크기)
em(부모태그(상위태그)의 font-size에 대응하는 상대적인 크기) */

/* text-align
블록 내에서 텍스트의 정렬 방식을 정의한다. 미리 정의된 키워드 값을 지정한다.
left/right : 왼쪽 또는 오른쪽 정렬
center : 가운데 정렬
justify : 양끝 정렬(마지막줄 제외)
 */

/* color
키워드 : 미리 정의된 생상별 키워드 사용 ex) red, blue
RGB 색상코드 : # + 여섯자리 16진수 값 형태
RGB 함수 : Red, Green, Blue의 수준을 각각 정의해 지정 */

/* display 속성은  요소를 블록과 인라인 요소 중 어느 쪽으로 처리할지 정의
inline : 인라인으로 처리
block : 블록 레벨로 처리
inline-block : 인라인으로 배치하되, 블록 레벨 요소의 속성을 추가할 수 있도록 처리
none: 디스플레이 표시 X
*/

/* border  요소가 차지하고 있는 영역에 테두리를 그릴 수 있다. 
border속성에는 속성값으로 테두리의 두께, 모양, 크기 등을 함께 지정할 수 있다(단축속성)
border-color : color 정의 방식과 동일
border-width : thin, medium, thick 등의 키워드 또는 px, em, rem 등의 단위
border-style : none(기본값), solid(직선), dotted(점선), dashed(긴 점선) 등*/

/* 박스모델
콘텐츠 영역 : width, height(인라인 요소에는 적용안됨)
안쪽 여백 : padding 
바깥쪽 여백 : margin 
테두리 : border-width*/

/* box-sizing
요소의 너비와 높이를 계산하는 방법을 지정
content-box : 기본값, 너비와 높이가 콘텐츠 영역만을 포함
border-box : 너비와 높이가 안쪽 여백과 테두리까지 포함  */

/* background 콘텐츠의 배경 정의
background-color : 배경 색을 정의
background-image : 배경 이미지 정의
background-position : 배경 이미지의 초기 위치 정의
background-size : 배경 이미지의 크기 정의
background-repeat : 배경 이미지의 반복 방법 정의 */

/* float 요소가 문서의 일반적인 흐름에서 제외되어 자신을 포함하고 있는 컨테이너의 왼쪽이나 오른쪽에 배치되게한다
none : 기본값
left : 자신을 포함하고 있는 박스의 왼편에 떠 있어야 함
right : 자신을 포함하고 이쓴ㄴ 박스의 오픈편에 떠있어야 함
 */

 /* clear 
 float 요소 이후에 표시되는 요소가 float를 해제하여 float 요소의 아래로 내려가게 할 수 있다.
 none : 기본값, 아래로 이동되지 않음을 나타내는 키워드
 left: float가 left인 요소의 아래로 내려가겠다.
 right : float가 right인 요소의 아래로 내려가겠다.
 both: float가 left 및 right인 요소의 아래로 내려가겠다. */


 /* position 문서 상에 요소를 배치하는 방법을 정의 top bottom right left

 */

 /* position: relative
 요소를 일반적인 문서 흐름에 따라 배치하되, 상하좌우 위치 값에 따라 오프셋을 적용  */

 /* position: absolute
 요소를 일반적인 문서 흐름에서 제거하고, 상위 요소 중 가장 가까운 potion지정 요소에 대해 상대적으로 오프셋 적용

  */

/* position: fixed
/* 요소를 일반적인 문서 흐름에서 제거하고, 지정된 위치에 고정시킨다 스크롤해도 고정  */


/* position: sticky
요소를 일반적인 문서 흐름에 따라 배치하고, 스크롤되는 가장 가까운 상위 요소에 대해 오프셋 적용
 */

 /* flexbox
 박스 내 요소 간의 공간 배분과 정렬 기능을 제공하기 위한 1차원 레이아웃 모델
 그 이유는 레이아웃을 다룰 때 한 번에 하나의 차원(행이나 열)만을 다룬다는 특성 때문*/

 /* 주축과 교차축
 진행방향을 의미하는 주축
 엇갈린 방향을 의미하는 교차축 */

 /* flex-direction 
 row : 기본값. 주축은 행이고 방향은 콘텐츠 방향과 동일
 row-reverse : 주축은 행이고 방향은 콘텐츠의 방향과 반대
 column : 주축은 열이고 방향은 콘텐트 방향과 동일
 column-reverse : 주축은 열이고 방향은 콘텐츠의 방향과 반대*/

 /*  
 주축 배치 방법 : justify-content
 교차축 배치 방법 : align-items
 교차축 개별요소 배치 방법 : align-self
 줄 바꿈 여부 : flex-wrap
 */

 /* 특성선택자 : 주어진 속성의 존재 여부나 그 값에 따라 요소를 선택
 [class*="it"] 클래스값에 "it"가 포함되는 요소 선택
 [class^="it"] 클래스값에 "it"로 시작하는 요소 선택
 [class$="it"] 클래스값에 "it"로 끝나는 요소 선택*/

 /* 결합자 : 두 개 이상의 선택자를 결합시켜 결합된 조건을 만족하는 요소를 선택
 자손 결합자 : div p div 요소 안에 위치하는 모든 p요소를 선택
            div > p div 요소의 바로 아래에 위치하는 모든 p요소를 선택
형제 결합자 : h1 ~ p h1 요소의 뒤에 오는 형제 중 모든 p 요소를 선택
            h1 + p h1 요소의 바로 뒤에 오는 형제 p 요소를 선택*/


.text{
    color: red;

}


#one {
    /* 우선순위 Times 없으면 monospace*/
    font-family: Times, monospace, serif;
}